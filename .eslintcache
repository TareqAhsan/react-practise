[{"E:\\react\\stack-learner\\src\\index.js":"1","E:\\react\\stack-learner\\src\\App.js":"2","E:\\react\\stack-learner\\src\\reportWebVitals.js":"3","E:\\react\\stack-learner\\src\\compoonent\\Counter.js":"4","E:\\react\\stack-learner\\src\\compoonent\\profile\\Profile.js":"5","E:\\react\\stack-learner\\src\\compoonent\\profile\\Bio.js":"6","E:\\react\\stack-learner\\src\\compoonent\\profile\\Skill.js":"7","E:\\react\\stack-learner\\src\\compoonent\\profile\\Links.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1905,"mtime":1608148142887,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":356,"mtime":1607890366799,"results":"13","hashOfConfig":"10"},{"size":730,"mtime":1608074036180,"results":"14","hashOfConfig":"10"},{"size":184,"mtime":1608074039757,"results":"15","hashOfConfig":"10"},{"size":294,"mtime":1608074006595,"results":"16","hashOfConfig":"10"},{"size":332,"mtime":1608067002196,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"wdsbvh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"E:\\react\\stack-learner\\src\\index.js",[],["38","39"],"E:\\react\\stack-learner\\src\\App.js",["40","41","42","43"],"import logo from './logo.svg';\n// import {React,useState} from 'react'\nimport './App.css';\nimport { Component } from 'react'\nimport Profile from './compoonent/profile/Profile'\nimport Bio from './compoonent/profile/Bio'\nimport Skill from './compoonent/profile/Skill';\n// import Counter from './compoonent/Counter'\n\n\nclass App extends Component{\n  state = {\n    count: 4\n }\n  \n  intervalID = null;\n\n\n  decrease = () => {\n    if (this.state.count > 0) {\n      this.setState({ count: this.state.count - 1 })\n    }\n  }\n  increase = () => {\n    this.setState({ count: this.state.count + 1 })\n  }\n  setTimer = () => {\n    if (this.state.count > 0 && !this.intervalID) {\n     this.intervalID= setInterval(() => {\n        this.setState({ count: this.state.count - 1 }, () => {\n          if (this.state.count === 0) {\n            alert('Timer finished')\n            clearInterval(this.intervalID)\n            this.intervalID = null;\n          }\n        });\n      },1000)\n    }\n  }\n\n  stopTimer = () => {\n    if (this.intervalID) {\n      clearInterval(this.intervalID)\n      this.intervalID =null\n    }\n  }\n\n  resettimer = () => {\n    this.setState({ count: 0 });\n    clearInterval(this.intervalID)\n    this.intervalID=null\n  }\n  render() {\n  \n    return (\n      <div className=\"App\">\n        <h1 className='Heading'>Simple timer</h1>\n        <div className='container'>\n          <button className='btn' onClick={this.decrease}>-</button>\n          <span>{ this.state.count}</span>\n          <button className='btn' onClick={this.increase}>+</button>\n        </div>\n        <div className=\"container\">\n          <button className='btn' onClick= {this.setTimer }>start</button>\n          <button className='btn'onClick ={this.stopTimer}>stop</button>\n          <button className='btn' onClick={this.resettimer}>reset</button>\n          \n        </div>\n           \n        </div>\n    );\n  \n  }\n}\nexport default App;\n\n","E:\\react\\stack-learner\\src\\reportWebVitals.js",[],"E:\\react\\stack-learner\\src\\compoonent\\Counter.js",[],["44","45"],"E:\\react\\stack-learner\\src\\compoonent\\profile\\Profile.js",[],"E:\\react\\stack-learner\\src\\compoonent\\profile\\Bio.js",[],"E:\\react\\stack-learner\\src\\compoonent\\profile\\Skill.js",[],"E:\\react\\stack-learner\\src\\compoonent\\profile\\Links.js",["46","47","48"],"import React from 'react'\r\n\r\nconst Links = () =>\r\n(\r\n        <div className=\"Links\">\r\n        <h3>social Links</h3>\r\n        <ul>\r\n            <li><a href=\"#\"> Facebook</a></li>\r\n            <li><a href=\"#\"> Linkedin</a></li>\r\n            <li><a href=\"#\"> instagram</a></li>\r\n        </ul>\r\n    </div>\r\n    );\r\nexport default Links;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":11},{"ruleId":"53","severity":1,"message":"59","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":13},{"ruleId":"49","replacedBy":"60"},{"ruleId":"51","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":17,"nodeType":"64","endLine":8,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":9,"column":17,"nodeType":"64","endLine":9,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":10,"column":17,"nodeType":"64","endLine":10,"endColumn":29},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Bio' is defined but never used.","'Skill' is defined but never used.",["65"],["66"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]